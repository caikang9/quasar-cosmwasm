{"message":"expected value, found module `contract::init`","code":{"code":"E0423","explanation":"An identifier was used like a function name or a value was expected and the\nidentifier exists but it belongs to a different namespace.\n\nErroneous code example:\n\n```compile_fail,E0423\nstruct Foo { a: bool };\n\nlet f = Foo();\n// error: expected function, tuple struct or tuple variant, found `Foo`\n// `Foo` is a struct name, but this expression uses it like a function name\n```\n\nPlease verify you didn't misspell the name of what you actually wanted to use\nhere. Example:\n\n```\nfn Foo() -> u32 { 0 }\n\nlet f = Foo(); // ok!\n```\n\nIt is common to forget the trailing `!` on macro invocations, which would also\nyield this error:\n\n```compile_fail,E0423\nprintln(\"\");\n// error: expected function, tuple struct or tuple variant,\n// found macro `println`\n// did you mean `println!(...)`? (notice the trailing `!`)\n```\n\nAnother case where this error is emitted is when a value is expected, but\nsomething else is found:\n\n```compile_fail,E0423\npub mod a {\n    pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":2308,"byte_end":2372,"line_start":74,"line_end":74,"column_start":22,"column_end":86,"is_primary":true,"text":[{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":22,"highlight_end":86}],"label":"not a value","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":3308,"byte_end":3375,"line_start":105,"line_end":105,"column_start":9,"column_end":76,"is_primary":false,"text":[{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":9,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":78,"byte_end":123,"line_start":6,"line_end":6,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"cosmwasm_std::create_entry_points!(contract);","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cosmwasm_std::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this function instead:\ncrate::contract::init::init","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0423]\u001b[0m\u001b[0m\u001b[1m: expected value, found module `contract::init`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mcosmwasm_std::create_entry_points!(contract);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this function instead:\u001b[0m\n\u001b[0m          crate::contract::init::init\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find value `handle` in module `contract`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":2619,"byte_end":2625,"line_start":83,"line_end":83,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":33,"highlight_end":39}],"label":"not found in `contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":3308,"byte_end":3375,"line_start":105,"line_end":105,"column_start":9,"column_end":76,"is_primary":false,"text":[{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":9,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":78,"byte_end":123,"line_start":6,"line_end":6,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"cosmwasm_std::create_entry_points!(contract);","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cosmwasm_std::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this function:\ncrate::contract::handler::handle","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `handle` in module `contract`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mcosmwasm_std::create_entry_points!(contract);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `contract`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this function:\u001b[0m\n\u001b[0m          crate::contract::handler::handle\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find value `query` in module `contract`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":2905,"byte_end":2910,"line_start":92,"line_end":92,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":33,"highlight_end":38}],"label":"not found in `contract`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":3308,"byte_end":3375,"line_start":105,"line_end":105,"column_start":9,"column_end":76,"is_primary":false,"text":[{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":9,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":78,"byte_end":123,"line_start":6,"line_end":6,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"cosmwasm_std::create_entry_points!(contract);","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cosmwasm_std::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::create_entry_points!","def_site_span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.10.1/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider importing this function:\ncrate::contract::querier::query","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `query` in module `contract`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mcosmwasm_std::create_entry_points!(contract);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `contract`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider importing this function:\u001b[0m\n\u001b[0m          crate::contract::querier::query\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused imports: `Binary`, `CanonicalAddr`, `HumanAddr`, `InitResponse`, `ReadonlyStorage`, `StdError`, `Uint128`, `log`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":24,"byte_end":27,"line_start":2,"line_end":2,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":34,"byte_end":40,"line_start":2,"line_end":2,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":42,"byte_end":55,"line_start":2,"line_end":2,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":86,"byte_end":95,"line_start":2,"line_end":2,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":97,"byte_end":109,"line_start":2,"line_end":2,"column_start":78,"column_end":90,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":78,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":124,"byte_end":139,"line_start":3,"line_end":3,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    ReadonlyStorage, StdError, StdResult, Storage, Uint128,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":141,"byte_end":149,"line_start":3,"line_end":3,"column_start":22,"column_end":30,"is_primary":true,"text":[{"text":"    ReadonlyStorage, StdError, StdResult, Storage, Uint128,","highlight_start":22,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":171,"byte_end":178,"line_start":3,"line_end":3,"column_start":52,"column_end":59,"is_primary":true,"text":[{"text":"    ReadonlyStorage, StdError, StdResult, Storage, Uint128,","highlight_start":52,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":24,"byte_end":29,"line_start":2,"line_end":2,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":32,"byte_end":55,"line_start":2,"line_end":2,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":84,"byte_end":109,"line_start":2,"line_end":2,"column_start":65,"column_end":90,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":65,"highlight_end":90}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":118,"byte_end":149,"line_start":2,"line_end":3,"column_start":99,"column_end":30,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":99,"highlight_end":100},{"text":"    ReadonlyStorage, StdError, StdResult, Storage, Uint128,","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":169,"byte_end":178,"line_start":3,"line_end":3,"column_start":50,"column_end":59,"is_primary":true,"text":[{"text":"    ReadonlyStorage, StdError, StdResult, Storage, Uint128,","highlight_start":50,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Binary`, `CanonicalAddr`, `HumanAddr`, `InitResponse`, `ReadonlyStorage`, `StdError`, `Uint128`, `log`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ReadonlyStorage, StdError, StdResult, Storage, Uint128,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":206,"byte_end":221,"line_start":5,"line_end":5,"column_start":24,"column_end":39,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":24,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":223,"byte_end":246,"line_start":5,"line_end":5,"column_start":41,"column_end":64,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":41,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":183,"byte_end":248,"line_start":5,"line_end":5,"column_start":1,"column_end":66,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `PrefixedStorage`, `ReadonlyPrefixedStorage`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:5:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse cosmwasm_storage::{PrefixedStorage, ReadonlyPrefixedStorage};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":254,"byte_end":275,"line_start":7,"line_end":7,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":250,"byte_end":276,"line_start":7,"line_end":7,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `ALLOWANCE_PREFIX`, `BALANCE_PREFIX`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":297,"byte_end":313,"line_start":9,"line_end":9,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"use crate::state::{ALLOWANCE_PREFIX, BALANCE_PREFIX};","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":315,"byte_end":329,"line_start":9,"line_end":9,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"use crate::state::{ALLOWANCE_PREFIX, BALANCE_PREFIX};","highlight_start":38,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":278,"byte_end":331,"line_start":9,"line_end":9,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::state::{ALLOWANCE_PREFIX, BALANCE_PREFIX};","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ALLOWANCE_PREFIX`, `BALANCE_PREFIX`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:9:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::state::{ALLOWANCE_PREFIX, BALANCE_PREFIX};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Binary`, `InitResponse`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract/handler/token.rs","byte_start":34,"byte_end":40,"line_start":2,"line_end":2,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/token.rs","byte_start":97,"byte_end":109,"line_start":2,"line_end":2,"column_start":78,"column_end":90,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":78,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract/handler/token.rs","byte_start":32,"byte_end":40,"line_start":2,"line_end":2,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract/handler/token.rs","byte_start":95,"byte_end":109,"line_start":2,"line_end":2,"column_start":76,"column_end":90,"is_primary":true,"text":[{"text":"    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,","highlight_start":76,"highlight_end":90}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Binary`, `InitResponse`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/token.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    log, Api, Binary, CanonicalAddr, Env, Extern, HandleResponse, HumanAddr, InitResponse, Querier,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `CanonicalAddr`, `StdError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":83,"byte_end":96,"line_start":4,"line_end":4,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"use cosmwasm_std::{CanonicalAddr, StdError, StdResult, Storage, Uint128};","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":98,"byte_end":106,"line_start":4,"line_end":4,"column_start":35,"column_end":43,"is_primary":true,"text":[{"text":"use cosmwasm_std::{CanonicalAddr, StdError, StdResult, Storage, Uint128};","highlight_start":35,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":83,"byte_end":108,"line_start":4,"line_end":4,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"use cosmwasm_std::{CanonicalAddr, StdError, StdResult, Storage, Uint128};","highlight_start":20,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `CanonicalAddr`, `StdError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:4:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse cosmwasm_std::{CanonicalAddr, StdError, StdResult, Storage, Uint128};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Bucket`, `ReadonlyBucket`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/state.rs","byte_start":172,"byte_end":178,"line_start":5,"line_end":5,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{singleton, Bucket, ReadonlyBucket, ReadonlySingleton, Singleton};","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":180,"byte_end":194,"line_start":5,"line_end":5,"column_start":43,"column_end":57,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{singleton, Bucket, ReadonlyBucket, ReadonlySingleton, Singleton};","highlight_start":43,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/state.rs","byte_start":170,"byte_end":194,"line_start":5,"line_end":5,"column_start":33,"column_end":57,"is_primary":true,"text":[{"text":"use cosmwasm_storage::{singleton, Bucket, ReadonlyBucket, ReadonlySingleton, Singleton};","highlight_start":33,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Bucket`, `ReadonlyBucket`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:5:35\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse cosmwasm_storage::{singleton, Bucket, ReadonlyBucket, ReadonlySingleton, Singleton};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":475,"byte_end":477,"line_start":15,"line_end":15,"column_start":7,"column_end":9,"is_primary":false,"text":[{"text":"    Ok()","highlight_start":7,"highlight_end":9}],"label":"supplied 0 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":473,"byte_end":475,"line_start":15,"line_end":15,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Ok()","highlight_start":5,"highlight_end":7}],"label":"expected 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Ok()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 0 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 argument\u001b[0m\n\n"}
{"message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":615,"byte_end":617,"line_start":22,"line_end":22,"column_start":7,"column_end":9,"is_primary":false,"text":[{"text":"    Ok()","highlight_start":7,"highlight_end":9}],"label":"supplied 0 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":613,"byte_end":615,"line_start":22,"line_end":22,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Ok()","highlight_start":5,"highlight_end":7}],"label":"expected 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Ok()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 0 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 argument\u001b[0m\n\n"}
{"message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract/handler/collateral.rs","byte_start":757,"byte_end":759,"line_start":29,"line_end":29,"column_start":7,"column_end":9,"is_primary":false,"text":[{"text":"    Ok()","highlight_start":7,"highlight_end":9}],"label":"supplied 0 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract/handler/collateral.rs","byte_start":755,"byte_end":757,"line_start":29,"line_end":29,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Ok()","highlight_start":5,"highlight_end":7}],"label":"expected 1 argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract/handler/collateral.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Ok()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 0 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 argument\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors; 7 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors; 7 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0061, E0423, E0425.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0423, E0425.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
