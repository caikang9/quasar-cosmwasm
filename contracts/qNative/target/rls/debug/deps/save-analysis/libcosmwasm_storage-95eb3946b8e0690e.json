{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2","program":"/Users/hyungsukkang/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cosmwasm_storage","--edition=2018","/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=95eb3946b8e0690e","-C","extra-filename=-95eb3946b8e0690e","--out-dir","/Users/hyungsukkang/quasar-cosmwasm/contracts/qNative/target/rls/debug/deps","-L","dependency=/Users/hyungsukkang/quasar-cosmwasm/contracts/qNative/target/rls/debug/deps","--extern","cosmwasm_std=/Users/hyungsukkang/quasar-cosmwasm/contracts/qNative/target/rls/debug/deps/libcosmwasm_std-426b00de4ad957e7.rmeta","--extern","serde=/Users/hyungsukkang/quasar-cosmwasm/contracts/qNative/target/rls/debug/deps/libserde-35f7cb57a9cdf07a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hyungsukkang/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/hyungsukkang/quasar-cosmwasm/contracts/qNative/target/rls/debug/deps/libcosmwasm_storage-95eb3946b8e0690e.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_storage","disambiguator":[14285944461563323270,4431678158760548805]},"crate_root":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src","external_crates":[{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14402131250693737975,4930015321591888693]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16391569226461738429,2396501197197794813]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6581379148618454087,14557654066704198562]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15002797972794468225,1552711559034990603]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266537971243543179,9932497131885326183]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12433302035576608964,14843331431738146314]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12879753800366072301,15634893218748870197]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[871993089839721140,4255527807152046989]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3647936590872438381,4893893150489999278]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10976154958785757182,17883745442996207364]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14421723712323189517,15602101823400920779]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[15573447528817193199,483222197062392413]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6010865286138026168,9367548366209168344]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[9784897484617007620,14674776224949800847]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9629926090994178847,12718026168620307260]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":16,"id":{"name":"serde","disambiguator":[3640242303473094606,18358674268475283117]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":17,"id":{"name":"serde_derive","disambiguator":[1965055974387596687,18323201930170057925]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":18,"id":{"name":"cosmwasm_std","disambiguator":[17961120101163132598,3581235979872604463]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":19,"id":{"name":"schemars","disambiguator":[16619810897786720140,17884159486393614443]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":20,"id":{"name":"schemars_derive","disambiguator":[4326078820165362454,12360868612178268080]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":21,"id":{"name":"serde_json","disambiguator":[3311497587703693471,14893107865853654459]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":22,"id":{"name":"itoa","disambiguator":[1681891137664447394,4763880737820381877]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":23,"id":{"name":"ryu","disambiguator":[12354056154733467483,418382466710127504]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":24,"id":{"name":"snafu","disambiguator":[28360515461447088,8849654418043288160]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":25,"id":{"name":"snafu_derive","disambiguator":[3926571746240197703,2392066545359469772]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":26,"id":{"name":"doc_comment","disambiguator":[3178608258387982073,17366743373387584285]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":27,"id":{"name":"base64","disambiguator":[317284191713581205,1965983621782900169]}},{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","num":28,"id":{"name":"serde_json_wasm","disambiguator":[683576844923317384,8370486732413090967]}}],"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":0,"byte_end":651,"line_start":1,"line_end":17,"column_start":1,"column_end":72}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":172,"byte_end":178,"line_start":11,"line_end":11,"column_start":18,"column_end":24},"alias_span":null,"name":"bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":180,"byte_end":191,"line_start":11,"line_end":11,"column_start":26,"column_end":37},"alias_span":null,"name":"bucket_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":193,"byte_end":199,"line_start":11,"line_end":11,"column_start":39,"column_end":45},"alias_span":null,"name":"Bucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":201,"byte_end":215,"line_start":11,"line_end":11,"column_start":47,"column_end":61},"alias_span":null,"name":"ReadonlyBucket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":244,"byte_end":262,"line_start":12,"line_end":12,"column_start":27,"column_end":45},"alias_span":null,"name":"to_length_prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":264,"byte_end":289,"line_start":12,"line_end":12,"column_start":47,"column_end":72},"alias_span":null,"name":"to_length_prefixed_nested","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":319,"byte_end":327,"line_start":13,"line_end":13,"column_start":28,"column_end":36},"alias_span":null,"name":"prefixed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":329,"byte_end":342,"line_start":13,"line_end":13,"column_start":38,"column_end":51},"alias_span":null,"name":"prefixed_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":344,"byte_end":359,"line_start":13,"line_end":13,"column_start":53,"column_end":68},"alias_span":null,"name":"PrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":361,"byte_end":384,"line_start":13,"line_end":13,"column_start":70,"column_end":93},"alias_span":null,"name":"ReadonlyPrefixedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":406,"byte_end":413,"line_start":14,"line_end":14,"column_start":20,"column_end":27},"alias_span":null,"name":"currval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":415,"byte_end":422,"line_start":14,"line_end":14,"column_start":29,"column_end":36},"alias_span":null,"name":"nextval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":424,"byte_end":432,"line_start":14,"line_end":14,"column_start":38,"column_end":46},"alias_span":null,"name":"sequence","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":455,"byte_end":464,"line_start":15,"line_end":15,"column_start":21,"column_end":30},"alias_span":null,"name":"singleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":466,"byte_end":480,"line_start":15,"line_end":15,"column_start":32,"column_end":46},"alias_span":null,"name":"singleton_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":482,"byte_end":499,"line_start":15,"line_end":15,"column_start":48,"column_end":65},"alias_span":null,"name":"ReadonlySingleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":501,"byte_end":510,"line_start":15,"line_end":15,"column_start":67,"column_end":76},"alias_span":null,"name":"Singleton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":536,"byte_end":549,"line_start":16,"line_end":16,"column_start":24,"column_end":37},"alias_span":null,"name":"transactional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":551,"byte_end":557,"line_start":16,"line_end":16,"column_start":39,"column_end":45},"alias_span":null,"name":"RepLog","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":559,"byte_end":577,"line_start":16,"line_end":16,"column_start":47,"column_end":65},"alias_span":null,"name":"StorageTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":596,"byte_end":601,"line_start":17,"line_end":17,"column_start":17,"column_end":22},"alias_span":null,"name":"typed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":603,"byte_end":613,"line_start":17,"line_end":17,"column_start":24,"column_end":34},"alias_span":null,"name":"typed_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":615,"byte_end":635,"line_start":17,"line_end":17,"column_start":36,"column_end":56},"alias_span":null,"name":"ReadonlyTypedStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":637,"byte_end":649,"line_start":17,"line_end":17,"column_start":58,"column_end":70},"alias_span":null,"name":"TypedStorage","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","byte_start":0,"byte_end":651,"line_start":1,"line_end":17,"column_start":1,"column_end":72},"name":"","qualname":"::","value":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":83},{"krate":0,"index":133},{"krate":0,"index":145},{"krate":0,"index":201},{"krate":0,"index":253},{"krate":0,"index":264},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":1303,"byte_end":1309,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"bucket","qualname":"::bucket::bucket","value":"pub fn bucket<'a, S, T>(&'a mut S, &[u8]) -> Bucket where S: Storage,\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Bucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Bucket::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":1245,"byte_end":1295,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":1544,"byte_end":1555,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"bucket_read","qualname":"::bucket::bucket_read","value":"pub fn bucket_read<'a, S, T>(&'a S, &[u8]) -> ReadonlyBucket where\nS: ReadonlyStorage, T: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyBucket::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyBucket::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":1478,"byte_end":1536,"line_start":25,"line_end":25,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":1755,"byte_end":1761,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::bucket::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2129,"byte_end":2132,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Bucket>::new","value":"pub fn new(&'a mut S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2329,"byte_end":2339,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<Bucket>::multilevel","value":"pub fn multilevel(&'a mut S, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2638,"byte_end":2642,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"save","qualname":"<Bucket>::save","value":"pub fn save(&mut Self, &[u8], &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2541,"byte_end":2626,"line_start":66,"line_end":66,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2802,"byte_end":2808,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"remove","qualname":"<Bucket>::remove","value":"pub fn remove(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3000,"byte_end":3004,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"load","qualname":"<Bucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2905,"byte_end":2988,"line_start":76,"line_end":76,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3308,"byte_end":3316,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Bucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3156,"byte_end":3253,"line_start":82,"line_end":82,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3258,"byte_end":3296,"line_start":83,"line_end":83,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4122,"byte_end":4128,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"update","qualname":"<Bucket>::update","value":"pub fn update<A, E>(&mut Self, &[u8], A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3844,"byte_end":3914,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":3919,"byte_end":4005,"line_start":102,"line_end":102,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4010,"byte_end":4013,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4018,"byte_end":4110,"line_start":104,"line_end":104,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4425,"byte_end":4439,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"ReadonlyBucket","qualname":"::bucket::ReadonlyBucket","value":"ReadonlyBucket {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4827,"byte_end":4830,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyBucket>::new","value":"pub fn new(&'a S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5031,"byte_end":5041,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyBucket>::multilevel","value":"pub fn multilevel(&'a S, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5342,"byte_end":5346,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlyBucket>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5247,"byte_end":5330,"line_start":149,"line_end":149,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5650,"byte_end":5658,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlyBucket>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5498,"byte_end":5595,"line_start":155,"line_end":155,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":5600,"byte_end":5638,"line_start":156,"line_end":156,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15224,"byte_end":15242,"line_start":9,"line_end":9,"column_start":8,"column_end":26},"name":"to_length_prefixed","qualname":"::length_prefixed::to_length_prefixed","value":"pub fn to_length_prefixed(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given namespace as documented\n in https://github.com/webmaster128/key-namespacing#length-prefixed-keys\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given namespace as documented","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15071,"byte_end":15140,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ in https://github.com/webmaster128/key-namespacing#length-prefixed-keys","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15141,"byte_end":15216,"line_start":8,"line_end":8,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15583,"byte_end":15608,"line_start":18,"line_end":18,"column_start":8,"column_end":33},"name":"to_length_prefixed_nested","qualname":"::length_prefixed::to_length_prefixed_nested","value":"pub fn to_length_prefixed_nested(&[&[u8]]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the raw key prefix for a given nested namespace\n as documented in https://github.com/webmaster128/key-namespacing#nesting\n","sig":null,"attributes":[{"value":"/ Calculates the raw key prefix for a given nested namespace","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15436,"byte_end":15498,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ as documented in https://github.com/webmaster128/key-namespacing#nesting","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/length_prefixed.rs","byte_start":15499,"byte_end":15575,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29214,"byte_end":29222,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"prefixed","qualname":"::prefixed_storage::prefixed","value":"pub fn prefixed<'a, S>(&'a mut S, &[u8]) -> PrefixedStorage where S: Storage","parent":null,"children":[],"decl_id":null,"docs":" An alias of PrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of PrefixedStorage::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29147,"byte_end":29206,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29441,"byte_end":29454,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"prefixed_read","qualname":"::prefixed_storage::prefixed_read","value":"pub fn prefixed_read<'a, S>(&'a S, &[u8]) -> ReadonlyPrefixedStorage where\nS: ReadonlyStorage","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyPrefixedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyPrefixedStorage::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29366,"byte_end":29433,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29629,"byte_end":29652,"line_start":26,"line_end":26,"column_start":12,"column_end":35},"name":"ReadonlyPrefixedStorage","qualname":"::prefixed_storage::ReadonlyPrefixedStorage","value":"ReadonlyPrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29839,"byte_end":29842,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyPrefixedStorage>::new","value":"pub fn new(&'a S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":30126,"byte_end":30136,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<ReadonlyPrefixedStorage>::multilevel","value":"pub fn multilevel(&'a S, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":30895,"byte_end":30910,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"PrefixedStorage","qualname":"::prefixed_storage::PrefixedStorage","value":"PrefixedStorage {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31060,"byte_end":31063,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PrefixedStorage>::new","value":"pub fn new(&'a mut S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31343,"byte_end":31353,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"multilevel","qualname":"<PrefixedStorage>::multilevel","value":"pub fn multilevel(&'a mut S, &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34469,"byte_end":34477,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"sequence","qualname":"::sequence::sequence","value":"pub fn sequence<'a, S: Storage>(&'a mut S, &[u8]) -> Singleton","parent":null,"children":[],"decl_id":null,"docs":" Sequence creates a custom Singleton to hold an empty sequence\n","sig":null,"attributes":[{"value":"/ Sequence creates a custom Singleton to hold an empty sequence","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34396,"byte_end":34461,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34716,"byte_end":34723,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"currval","qualname":"::sequence::currval","value":"pub fn currval<S: Storage>(&Singleton<, S, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" currval returns the last value returned by nextval. If the sequence has never been used,\n then it will return 0.\n","sig":null,"attributes":[{"value":"/ currval returns the last value returned by nextval. If the sequence has never been used,","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34589,"byte_end":34681,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ then it will return 0.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34682,"byte_end":34708,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34980,"byte_end":34987,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"nextval","qualname":"::sequence::nextval","value":"pub fn nextval<S: Storage>(&mut Singleton<, S, u64>) -> StdResult<u64>","parent":null,"children":[],"decl_id":null,"docs":" nextval increments the counter by 1 and returns the new value.\n On the first time it is called (no sequence info in db) it will return 1.\n","sig":null,"attributes":[{"value":"/ nextval increments the counter by 1 and returns the new value.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34828,"byte_end":34894,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ On the first time it is called (no sequence info in db) it will return 1.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/sequence.rs","byte_start":34895,"byte_end":34972,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":36924,"byte_end":36933,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"singleton","qualname":"::singleton::singleton","value":"pub fn singleton<'a, S, T>(&'a mut S, &[u8]) -> Singleton where S: Storage,\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of Singleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of Singleton::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":36863,"byte_end":36916,"line_start":9,"line_end":9,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":164},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37165,"byte_end":37179,"line_start":19,"line_end":19,"column_start":8,"column_end":22},"name":"singleton_read","qualname":"::singleton::singleton_read","value":"pub fn singleton_read<'a, S, T>(&'a S, &[u8]) -> ReadonlySingleton where\nS: ReadonlyStorage, T: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlySingleton::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlySingleton::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37096,"byte_end":37157,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37697,"byte_end":37706,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"Singleton","qualname":"::singleton::Singleton","value":"Singleton {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" Singleton effectively combines PrefixedStorage with TypedStorage to\n work on a single storage key. It performs the to_length_prefixed transformation\n on the given name to ensure no collisions, and then provides the standard\n TypedStorage accessors, without requiring a key (which is defined in the constructor)\n","sig":null,"attributes":[{"value":"/ Singleton effectively combines PrefixedStorage with TypedStorage to","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37362,"byte_end":37433,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ work on a single storage key. It performs the to_length_prefixed transformation","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37434,"byte_end":37517,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/ on the given name to ensure no collisions, and then provides the standard","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37518,"byte_end":37595,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ TypedStorage accessors, without requiring a key (which is defined in the constructor)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37596,"byte_end":37685,"line_start":30,"line_end":30,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38074,"byte_end":38077,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Singleton>::new","value":"pub fn new(&'a mut S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38352,"byte_end":38356,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"save","qualname":"<Singleton>::save","value":"pub fn save(&mut Self, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38255,"byte_end":38340,"line_start":55,"line_end":55,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38483,"byte_end":38489,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"remove","qualname":"<Singleton>::remove","value":"pub fn remove(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38648,"byte_end":38652,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"load","qualname":"<Singleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38553,"byte_end":38636,"line_start":65,"line_end":65,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38923,"byte_end":38931,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Singleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38771,"byte_end":38868,"line_start":71,"line_end":71,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":38873,"byte_end":38911,"line_start":72,"line_end":72,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39326,"byte_end":39332,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"update","qualname":"<Singleton>::update","value":"pub fn update<A, E>(&mut Self, A) -> Result<T, E> where A: FnOnce(T) ->\nResult<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" update will load the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful","sig":null,"attributes":[{"value":"/ update will load the data, perform the specified action, and store the result","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39057,"byte_end":39138,"line_start":78,"line_end":78,"column_start":5,"column_end":86}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39143,"byte_end":39228,"line_start":79,"line_end":79,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39233,"byte_end":39236,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This is the least stable of the APIs, and definitely needs some usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39241,"byte_end":39314,"line_start":81,"line_end":81,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39722,"byte_end":39739,"line_start":96,"line_end":96,"column_start":12,"column_end":29},"name":"ReadonlySingleton","qualname":"::singleton::ReadonlySingleton","value":"ReadonlySingleton {  }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" ReadonlySingleton only requires a ReadonlyStorage and exposes only the\n methods of Singleton that don't modify state.\n","sig":null,"attributes":[{"value":"/ ReadonlySingleton only requires a ReadonlyStorage and exposes only the","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39586,"byte_end":39660,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ methods of Singleton that don't modify state.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":39661,"byte_end":39710,"line_start":95,"line_end":95,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40127,"byte_end":40130,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlySingleton>::new","value":"pub fn new(&'a S, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40407,"byte_end":40411,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlySingleton>::load","value":"pub fn load(&Self) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40312,"byte_end":40395,"line_start":120,"line_end":120,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40682,"byte_end":40690,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlySingleton>::may_load","value":"pub fn may_load(&Self) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40530,"byte_end":40627,"line_start":126,"line_end":126,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40632,"byte_end":40670,"line_start":127,"line_end":127,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":46547,"byte_end":46565,"line_start":20,"line_end":20,"column_start":12,"column_end":30},"name":"StorageTransaction","qualname":"::transactions::StorageTransaction","value":"StorageTransaction {  }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":46920,"byte_end":46923,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<StorageTransaction>::new","value":"pub fn new(&'a S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47167,"byte_end":47174,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"prepare","qualname":"<StorageTransaction>::prepare","value":"pub fn prepare(Self) -> RepLog","parent":null,"children":[],"decl_id":null,"docs":" prepares this transaction to be committed to storage\n","sig":null,"attributes":[{"value":"/ prepares this transaction to be committed to storage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47099,"byte_end":47155,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47373,"byte_end":47381,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"rollback","qualname":"<StorageTransaction>::rollback","value":"pub fn rollback(Self)","parent":null,"children":[],"decl_id":null,"docs":" rollback will consume the checkpoint and drop all changes (no really needed, going out of scope does the same, but nice for clarity)\n","sig":null,"attributes":[{"value":"/ rollback will consume the checkpoint and drop all changes (no really needed, going out of scope does the same, but nice for clarity)","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47225,"byte_end":47361,"line_start":43,"line_end":43,"column_start":5,"column_end":141}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49614,"byte_end":49620,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"RepLog","qualname":"::transactions::RepLog","value":"RepLog {  }","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":50028,"byte_end":50034,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"commit","qualname":"<RepLog>::commit","value":"pub fn commit<S: Storage>(Self, &mut S)","parent":null,"children":[],"decl_id":null,"docs":" applies the stored list of `Op`s to the provided `Storage`\n","sig":null,"attributes":[{"value":"/ applies the stored list of `Op`s to the provided `Storage`","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49954,"byte_end":50016,"line_start":123,"line_end":123,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":53775,"byte_end":53788,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"transactional","qualname":"::transactions::transactional","value":"pub fn transactional<S, C, T>(&mut S, C) -> StdResult<T> where S: Storage,\nC: FnOnce(&mut StorageTransaction<, S>) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":66916,"byte_end":66921,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"typed","qualname":"::typed::typed","value":"pub fn typed<S, T>(&mut S) -> TypedStorage<, S, T> where S: Storage,\nT: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of TypedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of TypedStorage::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":66852,"byte_end":66908,"line_start":12,"line_end":12,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":280},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67134,"byte_end":67144,"line_start":22,"line_end":22,"column_start":8,"column_end":18},"name":"typed_read","qualname":"::typed::typed_read","value":"pub fn typed_read<S, T>(&S) -> ReadonlyTypedStorage<, S, T> where\nS: ReadonlyStorage, T: Serialize + DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" An alias of ReadonlyTypedStorage::new for less verbose usage\n","sig":null,"attributes":[{"value":"/ An alias of ReadonlyTypedStorage::new for less verbose usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67062,"byte_end":67126,"line_start":21,"line_end":21,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67316,"byte_end":67328,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"TypedStorage","qualname":"::typed::TypedStorage","value":"TypedStorage {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67681,"byte_end":67684,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedStorage>::new","value":"pub fn new(&'a mut S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67908,"byte_end":67912,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"save","qualname":"<TypedStorage>::save","value":"pub fn save(&mut Self, &[u8], &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67811,"byte_end":67896,"line_start":52,"line_end":52,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68133,"byte_end":68137,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"load","qualname":"<TypedStorage>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68038,"byte_end":68121,"line_start":58,"line_end":58,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68414,"byte_end":68422,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"may_load","qualname":"<TypedStorage>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68262,"byte_end":68359,"line_start":64,"line_end":64,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68364,"byte_end":68402,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69191,"byte_end":69197,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"update","qualname":"<TypedStorage>::update","value":"pub fn update<A>(&mut Self, &[u8], A) -> StdResult<T> where\nA: FnOnce(Option<T>) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" update will load the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful","sig":null,"attributes":[{"value":"/ update will load the data, perform the specified action, and store the result","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":68922,"byte_end":69003,"line_start":85,"line_end":85,"column_start":5,"column_end":86}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69008,"byte_end":69093,"line_start":86,"line_end":86,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69098,"byte_end":69101,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is the least stable of the APIs, and definitely needs some usage","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69106,"byte_end":69179,"line_start":88,"line_end":88,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69464,"byte_end":69484,"line_start":100,"line_end":100,"column_start":12,"column_end":32},"name":"ReadonlyTypedStorage","qualname":"::typed::ReadonlyTypedStorage","value":"ReadonlyTypedStorage {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69857,"byte_end":69860,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadonlyTypedStorage>::new","value":"pub fn new(&'a S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":70086,"byte_end":70090,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"load","qualname":"<ReadonlyTypedStorage>::load","value":"pub fn load(&Self, &[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69991,"byte_end":70074,"line_start":122,"line_end":122,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":70367,"byte_end":70375,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"may_load","qualname":"<ReadonlyTypedStorage>::may_load","value":"pub fn may_load(&Self, &[u8]) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":70215,"byte_end":70312,"line_start":128,"line_end":128,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":70317,"byte_end":70355,"line_start":129,"line_end":129,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2040,"byte_end":2046,"line_start":45,"line_end":45,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4722,"byte_end":4736,"line_start":128,"line_end":128,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29765,"byte_end":29788,"line_start":34,"line_end":34,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":30350,"byte_end":30373,"line_start":55,"line_end":55,"column_start":33,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31002,"byte_end":31017,"line_start":83,"line_end":83,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31563,"byte_end":31578,"line_start":104,"line_end":104,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":32199,"byte_end":32214,"line_start":125,"line_end":125,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37982,"byte_end":37991,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40019,"byte_end":40036,"line_start":107,"line_end":107,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":46881,"byte_end":46899,"line_start":29,"line_end":29,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47443,"byte_end":47461,"line_start":47,"line_end":47,"column_start":50,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49125,"byte_end":49143,"line_start":91,"line_end":91,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49732,"byte_end":49738,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":50451,"byte_end":50453,"line_start":144,"line_end":144,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67586,"byte_end":67598,"line_start":40,"line_end":40,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69746,"byte_end":69766,"line_start":110,"line_end":110,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":2040,"byte_end":2046,"line_start":45,"line_end":45,"column_start":16,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/bucket.rs","byte_start":4722,"byte_end":4736,"line_start":128,"line_end":128,"column_start":16,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":29765,"byte_end":29788,"line_start":34,"line_end":34,"column_start":30,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":30350,"byte_end":30373,"line_start":55,"line_end":55,"column_start":33,"column_end":56},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":100},"to":{"krate":18,"index":569}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31002,"byte_end":31017,"line_start":83,"line_end":83,"column_start":13,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":31563,"byte_end":31578,"line_start":104,"line_end":104,"column_start":33,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":114},"to":{"krate":18,"index":569}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/prefixed_storage.rs","byte_start":32199,"byte_end":32214,"line_start":125,"line_end":125,"column_start":25,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":114},"to":{"krate":18,"index":571}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":37982,"byte_end":37991,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/singleton.rs","byte_start":40019,"byte_end":40036,"line_start":107,"line_end":107,"column_start":16,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":46881,"byte_end":46899,"line_start":29,"line_end":29,"column_start":30,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":47443,"byte_end":47461,"line_start":47,"line_end":47,"column_start":50,"column_end":68},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":207},"to":{"krate":18,"index":569}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49125,"byte_end":49143,"line_start":91,"line_end":91,"column_start":42,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":207},"to":{"krate":18,"index":571}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":49732,"byte_end":49738,"line_start":113,"line_end":113,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/transactions.rs","byte_start":50451,"byte_end":50453,"line_start":144,"line_end":144,"column_start":6,"column_end":8},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":67586,"byte_end":67598,"line_start":40,"line_end":40,"column_start":16,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hyungsukkang/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-storage-0.11.2/src/typed.rs","byte_start":69746,"byte_end":69766,"line_start":110,"line_end":110,"column_start":16,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}}]}